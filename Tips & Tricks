Don't move the same card twice in a row
When a card can be moved to the foundation, move it to the foundation.
The last card in a pile should be moved before moving from the longest tableau set.
When playing on the tableau add and remove cards from tableau 7 - 1.
Always move a king to an open tableau if available
Move Cards in tableau before moving cards from the waste
If there's nothing that can be moved, flip a card from the waste.
If there's nothing playable in the waste, see if you can drag a card from the foundation

Design Documentation:
Solitaire Simulator
Ben Richards, Thomas Torbert, Leo Braun, Readyson Vang, Greg Drayton

Overview
Create a program that runs multiple simulations of the game of solitaire and attempts to get the highest win percentagebased on a stategy developed by the team members.

Context
Java in Eclipse
Deck & Card Classes completed 10/5/20
1-Construct play area that has waste, tableau, and foundation stacks.
2-Create Solitaire GUI 
3-Card deck class interacts with GUI to convey info to user
4-Waste Pile draws 3 cards from top of deck
5-Tableau set up in 1-7 card order left to right
6-4 foundation piles specific to each ace
7-Waste pile resets from the top after all cards are layed maximum x3 w/o other moves before game ends(loss)
8-Alternate between red and black card faces in tableau stacks with highest range card at the bottom.

Classes:
Deck
Card
Playfield
Waste
Tableau
Foundation
Solitaire (runner class)

Goals
Develop running program that will produce a consistent number of wins.
Follow the milestone timeline to stay on track.

Non Goals
Find optimal solution to get highest win percentage.
Team collaboration splits work between the group evenly.

MileStones:
Start Date: 5 Oct. 2020
MileStone 1: Create Deck and Card Classes: Due 5 Oct. 2020
MileStone 2: Start impementation of all classes: 9 Oct. 2020
MileStone 3: MVP program: 12 Oct. 2020
MileStone 4: Develop connection between objects and get simulation running: 16 Oct. 2020
MileStone 5: Complete project with multiple simulations and win percentage: 22 Oct. 2020

Existing Solution:
We have the competed card and deck classes as a part of our prototype and have set up the eclipse file for java implemention of the rest of our classes stated above.

Proposed Solution:
As a team, we look to develop an effective and efficient simulation of the game of solitaire, to produce the win percentage in a random game of solitaire.

